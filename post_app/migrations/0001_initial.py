# Generated by Django 2.1.7 on 2019-07-22 15:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChemicalTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='化学タグ名')),
            ],
            options={
                'verbose_name': '化学タグ',
                'verbose_name_plural': '化学タグ',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='タイトル')),
                ('text', models.TextField(verbose_name='本文')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日')),
                ('thumnail', models.ImageField(blank=True, null=True, upload_to='thumnail/')),
                ('view_counter', models.IntegerField(default=0, verbose_name='閲覧数')),
                ('detail', models.TextField(blank=True, verbose_name='記事の説明')),
                ('chemical_tag', models.ManyToManyField(blank=True, to='post_app.ChemicalTag', verbose_name='化学タグ')),
                ('friend_posts', models.ManyToManyField(blank=True, related_name='_post_friend_posts_+', to='post_app.Post', verbose_name='関連記事')),
            ],
            options={
                'verbose_name': '記事',
                'verbose_name_plural': '記事',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='名前')),
                ('text', models.TextField(verbose_name='コメント')),
                ('thumnail', models.ImageField(blank=True, null=True, upload_to='comment_thumnail/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post_app.Post', verbose_name='対象記事')),
            ],
            options={
                'verbose_name': '記事コメント',
                'verbose_name_plural': '記事コメント',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PostReComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='名前')),
                ('text', models.TextField(verbose_name='コメント')),
                ('thumnail', models.ImageField(blank=True, null=True, upload_to='recomment_thumnail/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post_app.PostComment')),
            ],
            options={
                'verbose_name': '記事コメントの返信',
                'verbose_name_plural': '記事コメントの返信',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='記事タグ名')),
            ],
            options={
                'verbose_name': '記事タグ',
                'verbose_name_plural': '記事タグ',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='post_tag',
            field=models.ManyToManyField(blank=True, to='post_app.PostTag', verbose_name='記事タグ'),
        ),
    ]
